# coding=UTF8
# Let d(n) be defined as the sum of proper divisors of n (numbers less than n which divide evenly into n).
# If d(a) = b and d(b) = a, where a â‰  b, then a and b are an amicable pair and each of a and b are called amicable numbers.
#
# For example, the proper divisors of 220 are 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 and 110; therefore d(220) = 284. The proper divisors of 284 are 1, 2, 4, 71 and 142; so d(284) = 220.
#
# Evaluate the sum of all the amicable numbers under 10000.

import time, sys

start = time.ctime()

arg = int(sys.argv[1])
#print type(arg)
numbers = [1]

# If halved then halve again etc. until False and then thirds. Then halves etc.

def proper(n):
  i = 2.0
  while i < n:
    if n % i == 0:
      numbers.append(n)
      return proper(n/i)
    else:
      i += 1.0

result = proper(arg)

for item in numbers:
  print item

finish = time.ctime()

print "\n\nStarted: %s \n\nCompleted: %s\n" % (start, finish)

